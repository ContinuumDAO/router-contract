{"abi":[{"type":"function","name":"aggregate","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"payable"},{"type":"function","name":"aggregate3","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call3[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"allowFailure","type":"bool","internalType":"bool"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"aggregate3Value","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call3Value[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"allowFailure","type":"bool","internalType":"bool"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"blockAndAggregate","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"getBasefee","inputs":[],"outputs":[{"name":"basefee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockHash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getChainId","inputs":[],"outputs":[{"name":"chainid","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockCoinbase","inputs":[],"outputs":[{"name":"coinbase","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockDifficulty","inputs":[],"outputs":[{"name":"difficulty","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockGasLimit","inputs":[],"outputs":[{"name":"gaslimit","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getEthBalance","inputs":[{"name":"addr","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastBlockHash","inputs":[],"outputs":[{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"tryAggregate","inputs":[{"name":"requireSuccess","type":"bool","internalType":"bool"},{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"tryBlockAndAggregate","inputs":[{"name":"requireSuccess","type":"bool","internalType":"bool"},{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"}],"bytecode":{"object":"0x6080806040523461001657610ce5908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630f28c97d14610117578063174dea7114610112578063252dba421461010d57806327e86d6e146101085780633408e47014610103578063399542e9146100fe5780633e64a696146100f957806342cbb15c146100f45780634d2301cc146100ef57806372425d9d146100ea57806382ad56cb146100e557806386d516e8146100e0578063a8b0574e146100db578063bce38bd7146100d6578063c3077fa9146100d15763ee82ac5e146100cc57600080fd5b610855565b6107bb565b610798565b61077d565b610762565b610678565b61065d565b610635565b6105fc565b6105e1565b6105bd565b61054d565b61050f565b610430565b610297565b34610132576000600319360112610132576020604051428152f35b600080fd5b9181601f840112156101325782359167ffffffffffffffff8311610132576020808501948460051b01011161013257565b6020600319820112610132576004359067ffffffffffffffff82116101325761019391600401610137565b9091565b919082519283825260005b8481106101e15750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016101a2565b908082519081815260208091019281808460051b8301019501936000915b8483106102235750505050505090565b9091929394958480610273837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08660019603018752828b5180511515835201519060409081858201520190610197565b9801930193019194939290610213565b9060206102949281815201906101f5565b90565b6102a036610168565b60006102ab82610ab3565b91815b8181106102d4576102d0846102c4853414610c4a565b60405191829182610283565b0390f35b6102de8185610a3a565b516102ea828488610c0a565b600080604061031e818501358099019861030386610977565b926103116060880188610981565b93909151809481936109d2565b03925af19161032b6109e0565b90610340602094859384840152829015159052565b51910135171561035357506001016102ae565b7f08c379a00000000000000000000000000000000000000000000000000000000060005260045260176024527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060445260846000fd5b90604082019082526020604081840152835180925260608301928160608460051b8301019501936000915b8483106103e45750505050505090565b9091929394958480610420837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa086600196030187528a51610197565b98019301930191949392906103d4565b61043936610168565b9061044b610446836108eb565b6108a2565b918083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610479826108eb565b0160005b8181106104fe57505060005b81811061049f57604051806102d08643836103a9565b806104f86000806104b36001958789610932565b816104cb6104c083610977565b926020810190610981565b91906104dc604051809481936109d2565b03925af16104e86109e0565b6104f28489610a3a565b52610a4e565b01610489565b80606060208093880101520161047d565b346101325760006003193601126101325760206040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4301408152f35b34610132576000600319360112610132576020604051468152f35b90604060031983011261013257600435801515810361013257916024359067ffffffffffffffff82116101325761019391600401610137565b61029493926060928252602082015281604082015201906101f5565b6102d06105d26105cc36610568565b91610b34565b604051918291434043846105a1565b34610132576000600319360112610132576020604051488152f35b34610132576000600319360112610132576020604051438152f35b73ffffffffffffffffffffffffffffffffffffffff81160361013257565b3461013257602060031936011261013257602060043561065481610617565b31604051908152f35b34610132576000600319360112610132576020604051448152f35b61068136610168565b61068a81610ab3565b9060005b8181106106a357604051806102d08582610283565b6106ad8184610a3a565b516106b9828487610bca565b6000806106c583610977565b6106d782604061031181880188610981565b03925af1916106e46109e0565b906106f9602094859384840152829015159052565b51910135171561070c575060010161068e565b7f08c379a00000000000000000000000000000000000000000000000000000000060005260045260176024527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060445260646000fd5b34610132576000600319360112610132576020604051458152f35b34610132576000600319360112610132576020604051418152f35b6102d06107a76105cc36610568565b6040519182916020835260208301906101f5565b6107c436610168565b6107cd81610ab3565b9160005b8281106107ea57604051806102d08643804090846105a1565b8061084f6107fa60019387610a3a565b51610806838787610932565b600080823561081481610617565b8161082460209586810190610981565b9190826040519384928337810182815203925af1906108416109e0565b908301521515809152610a4e565b016107d1565b34610132576020600319360112610132576020604051600435408152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff8211176108e657604052565b610873565b67ffffffffffffffff81116108e65760051b60200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908110156109725760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc181360301821215610132570190565b610903565b3561029481610617565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610132570180359067ffffffffffffffff82116101325760200191813603831361013257565b908092918237016000815290565b3d15610a35573d9067ffffffffffffffff82116108e657610a2860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116016108a2565b9182523d6000602084013e565b606090565b80518210156109725760209160051b010190565b15610a5557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d756c746963616c6c333a2063616c6c206661696c65640000000000000000006044820152fd5b90610ac0610446836108eb565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610aee82946108eb565b016000805b828110610b005750505050565b604090815182810181811067ffffffffffffffff8211176108e6576020935283815282606081830152828701015201610af3565b929190610b4082610ab3565b9360005b838110610b515750505050565b80610b5e60019288610a3a565b5183610b6b838888610932565b6000808235610b7981610617565b81610b8960209586810190610981565b9190826040519384928337810182815203925af190610ba66109e0565b908401521515809252610bbb575b5001610b44565b610bc490610a4e565b38610bb4565b91908110156109725760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa181360301821215610132570190565b91908110156109725760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8181360301821215610132570190565b15610c5157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d617463680000000000006044820152fdfea26469706673582212207451e71182fea44dbc9f527ad367dbfb5041e8fa9e4d7efc4a1614de9d0b463e64736f6c63430008140033","sourceMap":"503:10269:6:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436101561001257600080fd5b60003560e01c80630f28c97d14610117578063174dea7114610112578063252dba421461010d57806327e86d6e146101085780633408e47014610103578063399542e9146100fe5780633e64a696146100f957806342cbb15c146100f45780634d2301cc146100ef57806372425d9d146100ea57806382ad56cb146100e557806386d516e8146100e0578063a8b0574e146100db578063bce38bd7146100d6578063c3077fa9146100d15763ee82ac5e146100cc57600080fd5b610855565b6107bb565b610798565b61077d565b610762565b610678565b61065d565b610635565b6105fc565b6105e1565b6105bd565b61054d565b61050f565b610430565b610297565b34610132576000600319360112610132576020604051428152f35b600080fd5b9181601f840112156101325782359167ffffffffffffffff8311610132576020808501948460051b01011161013257565b6020600319820112610132576004359067ffffffffffffffff82116101325761019391600401610137565b9091565b919082519283825260005b8481106101e15750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016101a2565b908082519081815260208091019281808460051b8301019501936000915b8483106102235750505050505090565b9091929394958480610273837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08660019603018752828b5180511515835201519060409081858201520190610197565b9801930193019194939290610213565b9060206102949281815201906101f5565b90565b6102a036610168565b60006102ab82610ab3565b91815b8181106102d4576102d0846102c4853414610c4a565b60405191829182610283565b0390f35b6102de8185610a3a565b516102ea828488610c0a565b600080604061031e818501358099019861030386610977565b926103116060880188610981565b93909151809481936109d2565b03925af19161032b6109e0565b90610340602094859384840152829015159052565b51910135171561035357506001016102ae565b7f08c379a00000000000000000000000000000000000000000000000000000000060005260045260176024527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060445260846000fd5b90604082019082526020604081840152835180925260608301928160608460051b8301019501936000915b8483106103e45750505050505090565b9091929394958480610420837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa086600196030187528a51610197565b98019301930191949392906103d4565b61043936610168565b9061044b610446836108eb565b6108a2565b918083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610479826108eb565b0160005b8181106104fe57505060005b81811061049f57604051806102d08643836103a9565b806104f86000806104b36001958789610932565b816104cb6104c083610977565b926020810190610981565b91906104dc604051809481936109d2565b03925af16104e86109e0565b6104f28489610a3a565b52610a4e565b01610489565b80606060208093880101520161047d565b346101325760006003193601126101325760206040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4301408152f35b34610132576000600319360112610132576020604051468152f35b90604060031983011261013257600435801515810361013257916024359067ffffffffffffffff82116101325761019391600401610137565b61029493926060928252602082015281604082015201906101f5565b6102d06105d26105cc36610568565b91610b34565b604051918291434043846105a1565b34610132576000600319360112610132576020604051488152f35b34610132576000600319360112610132576020604051438152f35b73ffffffffffffffffffffffffffffffffffffffff81160361013257565b3461013257602060031936011261013257602060043561065481610617565b31604051908152f35b34610132576000600319360112610132576020604051448152f35b61068136610168565b61068a81610ab3565b9060005b8181106106a357604051806102d08582610283565b6106ad8184610a3a565b516106b9828487610bca565b6000806106c583610977565b6106d782604061031181880188610981565b03925af1916106e46109e0565b906106f9602094859384840152829015159052565b51910135171561070c575060010161068e565b7f08c379a00000000000000000000000000000000000000000000000000000000060005260045260176024527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060445260646000fd5b34610132576000600319360112610132576020604051458152f35b34610132576000600319360112610132576020604051418152f35b6102d06107a76105cc36610568565b6040519182916020835260208301906101f5565b6107c436610168565b6107cd81610ab3565b9160005b8281106107ea57604051806102d08643804090846105a1565b8061084f6107fa60019387610a3a565b51610806838787610932565b600080823561081481610617565b8161082460209586810190610981565b9190826040519384928337810182815203925af1906108416109e0565b908301521515809152610a4e565b016107d1565b34610132576020600319360112610132576020604051600435408152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff8211176108e657604052565b610873565b67ffffffffffffffff81116108e65760051b60200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908110156109725760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc181360301821215610132570190565b610903565b3561029481610617565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610132570180359067ffffffffffffffff82116101325760200191813603831361013257565b908092918237016000815290565b3d15610a35573d9067ffffffffffffffff82116108e657610a2860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116016108a2565b9182523d6000602084013e565b606090565b80518210156109725760209160051b010190565b15610a5557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d756c746963616c6c333a2063616c6c206661696c65640000000000000000006044820152fd5b90610ac0610446836108eb565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610aee82946108eb565b016000805b828110610b005750505050565b604090815182810181811067ffffffffffffffff8211176108e6576020935283815282606081830152828701015201610af3565b929190610b4082610ab3565b9360005b838110610b515750505050565b80610b5e60019288610a3a565b5183610b6b838888610932565b6000808235610b7981610617565b81610b8960209586810190610981565b9190826040519384928337810182815203925af190610ba66109e0565b908401521515809252610bbb575b5001610b44565b610bc490610a4e565b38610bb4565b91908110156109725760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa181360301821215610132570190565b91908110156109725760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8181360301821215610132570190565b15610c5157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d617463680000000000006044820152fdfea26469706673582212207451e71182fea44dbc9f527ad367dbfb5041e8fa9e4d7efc4a1614de9d0b463e64736f6c63430008140033","sourceMap":"503:10269:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;503:10269:6;;;;;;;;9957:15;503:10269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;503:10269:6;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;-1:-1:-1;503:10269:6;;;;;;;;;;;-1:-1:-1;503:10269:6;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;503:10269:6;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;-1:-1:-1;6697:20:6;;;:::i;:::-;6767:13;;6782:10;;;;;;503:10269;8760:9;8752:66;8760:9;;:27;8752:66;:::i;:::-;6904:11;503:10269;;;;;;:::i;:::-;;;;6767:13;6833;;;;:::i;:::-;;6868:8;;;;;:::i;:::-;-1:-1:-1;6904:11:6;;503:10269;6904:11;;;503:10269;;;;7219:12;;;;:::i;:::-;7266:14;;;;;;;:::i;:::-;503:10269;;;;;;;;;:::i;:::-;7219:75;;;;;;;:::i;:::-;7198:17;7181:113;7198:17;;;;;;;7181:113;;503:10269;;;;;;7181:113;7308:1297;;;;;;;;503:10269;;;6767:13;;7308:1297;;-1:-1:-1;7308:1297:6;503:10269;7308:1297;;;;;;;;-1:-1:-1;7308:1297:6;503:10269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;-1:-1:-1;503:10269:6;;;;;;1455:13;;-1:-1:-1;1470:10:6;;;;;;503:10269;;;;;1319:12;503:10269;;:::i;1455:13::-;1531:8;1625:43;-1:-1:-1;1531:8:6;;503:10269;1531:8;;;;:::i;:::-;1580:11;1597:13;1580:11;;;:::i;:::-;1597:13;503:10269;1597:13;;;;:::i;:::-;503:10269;;;;;;;;;;:::i;:::-;1580:31;;;;;;:::i;:::-;1553:58;;;;:::i;:::-;;1625:43;:::i;:::-;503:10269;1455:13;;503:10269;;;;;;;;;;;;;;;;;;-1:-1:-1;;503:10269:6;;;;;;;;;10347:12;503:10269;10337:27;503:10269;;;;;;;;-1:-1:-1;;503:10269:6;;;;;;;;10750:13;503:10269;;;;;;-1:-1:-1;;503:10269:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3439:35;503:10269;;;:::i;:::-;3439:35;;:::i;:::-;503:10269;;3359:12;;;;3393:23;3359:12;503:10269;;:::i;:::-;;;;;-1:-1:-1;;503:10269:6;;;;;;;;10607:13;503:10269;;;;;;;;-1:-1:-1;;503:10269:6;;;;;;;;9228:12;503:10269;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;503:10269:6;;;;;;;;;;;:::i;:::-;10141:12;503:10269;;;;;;;;;;;-1:-1:-1;;503:10269:6;;;;;;;;9592:16;503:10269;;;;;;;:::i;:::-;4570:20;;;:::i;:::-;4635:13;-1:-1:-1;4650:10:6;;;;;;4831:14;503:10269;;;;;;:::i;4635:13::-;4701;;;;:::i;:::-;;4736:8;;;;;:::i;:::-;-1:-1:-1;4796:12:6;;;;:::i;:::-;503:10269;4831:14;;;;;;;;:::i;503:10269::-;4796:63;;;;;;;:::i;:::-;4775:17;4758:101;4775:17;;;;;;;4758:101;;503:10269;;;;;;4758:101;4873:1297;;;;;;;;503:10269;;;4635:13;;4873:1297;;-1:-1:-1;4873:1297:6;503:10269;4873:1297;;;;;;;;-1:-1:-1;4873:1297:6;503:10269;;;;;-1:-1:-1;;503:10269:6;;;;;;;;9760:14;503:10269;;;;;;;;-1:-1:-1;;503:10269:6;;;;;;;;9391:14;503:10269;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;2231:20;;;:::i;:::-;2294:13;-1:-1:-1;2309:10:6;;;;;;503:10269;;;;;3359:12;3393:23;;;503:10269;;:::i;2294:13::-;2360;2565:50;2360:13;4176:4;2360:13;;;:::i;:::-;;2394:8;;;;;:::i;:::-;-1:-1:-1;503:10269:6;;;;;;:::i;:::-;2488:13;;;;;;;;;:::i;:::-;503:10269;;;;;;;;;;;;;;;2454:61;;;;;;;:::i;:::-;2433:17;;;2416:99;503:10269;;;;;2565:50;:::i;:::-;503:10269;2294:13;;503:10269;;;;;-1:-1:-1;;503:10269:6;;;;;;;;;;9060:22;503:10269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;503:10269:6;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;-1:-1:-1;503:10269:6;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2029:662;;;;2231:20;;;:::i;:::-;2294:13;-1:-1:-1;2309:10:6;;;;;;2029:662;;;;:::o;2294:13::-;2360;;503:10269;2360:13;;;:::i;:::-;;2394:8;;;;;;:::i;:::-;-1:-1:-1;503:10269:6;;;;;;:::i;:::-;2488:13;;;;;;;;;:::i;:::-;503:10269;;;;;;;;;;;;;;;2454:61;;;;;;;:::i;:::-;2433:17;;;2416:99;503:10269;;;;;2529:86;;2294:13;503:10269;;2294:13;;2529:86;2565:50;;;:::i;:::-;2529:86;;;503:10269;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"methodIdentifiers":{"aggregate((address,bytes)[])":"252dba42","aggregate3((address,bool,bytes)[])":"82ad56cb","aggregate3Value((address,bool,uint256,bytes)[])":"174dea71","blockAndAggregate((address,bytes)[])":"c3077fa9","getBasefee()":"3e64a696","getBlockHash(uint256)":"ee82ac5e","getBlockNumber()":"42cbb15c","getChainId()":"3408e470","getCurrentBlockCoinbase()":"a8b0574e","getCurrentBlockDifficulty()":"72425d9d","getCurrentBlockGasLimit()":"86d516e8","getCurrentBlockTimestamp()":"0f28c97d","getEthBalance(address)":"4d2301cc","getLastBlockHash()":"27e86d6e","tryAggregate(bool,(address,bytes)[])":"bce38bd7","tryBlockAndAggregate(bool,(address,bytes)[])":"399542e9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call3[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call3Value[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3Value\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"blockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBasefee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"basefee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryAggregate\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryBlockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>Andreas Bigger <andreas@nascent.xyz>Matt Solomon <matt@mattsolomon.dev>\",\"details\":\"Multicall & Multicall2 backwards-compatibleAggregate methods are marked `payable` to save 24 gas per call\",\"kind\":\"dev\",\"methods\":{\"aggregate((address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of bytes containing the responses\"}},\"aggregate3((address,bool,bytes)[])\":{\"params\":{\"calls\":\"An array of Call3 structs\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"aggregate3Value((address,bool,uint256,bytes)[])\":{\"params\":{\"calls\":\"An array of Call3Value structs\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"blockAndAggregate((address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockHash\":\"The hash of the block where the calls were executed\",\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of Result structs\"}},\"getBlockHash(uint256)\":{\"params\":{\"blockNumber\":\"The block number\"}},\"tryAggregate(bool,(address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\",\"requireSuccess\":\"If true, require all calls to succeed\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"tryBlockAndAggregate(bool,(address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockHash\":\"The hash of the block where the calls were executed\",\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of Result structs\"}}},\"title\":\"Multicall3\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregate((address,bytes)[])\":{\"notice\":\"Backwards-compatible call aggregation with Multicall\"},\"aggregate3((address,bool,bytes)[])\":{\"notice\":\"Aggregate calls, ensuring each returns success if required\"},\"aggregate3Value((address,bool,uint256,bytes)[])\":{\"notice\":\"Aggregate calls with a msg valueReverts if msg.value is less than the sum of the call values\"},\"blockAndAggregate((address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate\"},\"getBasefee()\":{\"notice\":\"Gets the base fee of the given blockCan revert if the BASEFEE opcode is not implemented by the given chain\"},\"getBlockHash(uint256)\":{\"notice\":\"Returns the block hash for the given block number\"},\"getBlockNumber()\":{\"notice\":\"Returns the block number\"},\"getChainId()\":{\"notice\":\"Returns the chain id\"},\"getCurrentBlockCoinbase()\":{\"notice\":\"Returns the block coinbase\"},\"getCurrentBlockDifficulty()\":{\"notice\":\"Returns the block difficulty\"},\"getCurrentBlockGasLimit()\":{\"notice\":\"Returns the block gas limit\"},\"getCurrentBlockTimestamp()\":{\"notice\":\"Returns the block timestamp\"},\"getEthBalance(address)\":{\"notice\":\"Returns the (ETH) balance of a given address\"},\"getLastBlockHash()\":{\"notice\":\"Returns the block hash of the last block\"},\"tryAggregate(bool,(address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls without requiring success\"},\"tryBlockAndAggregate(bool,(address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate\"}},\"notice\":\"Aggregate results from multiple function calls\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/Multicall3.sol\":\"Multicall3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":@prb/test/=lib/prb-math/node_modules/@prb/test/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":protocol/=lib/protocol/\"],\"viaIR\":true},\"sources\":{\"contracts/mock/Multicall3.sol\":{\"keccak256\":\"0xd7a072f89d3228f1723168bed8d843536225b7e5262b59b7cecd288ec4016826\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7eebfb606565b6778b4935ea365583e7fdd9f0dde081845ab2e955f0aaf3f32\",\"dweb:/ipfs/QmWrGXggMLWYHWeEugB34KX8wCcVQGohABEx22m7N9DLqQ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}]},{"inputs":[{"internalType":"struct Multicall3.Call3[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate3","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"struct Multicall3.Call3Value[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate3Value","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"blockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBasefee","outputs":[{"internalType":"uint256","name":"basefee","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getChainId","outputs":[{"internalType":"uint256","name":"chainid","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockDifficulty","outputs":[{"internalType":"uint256","name":"difficulty","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"stateMutability":"view","type":"function","name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"tryAggregate","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"tryBlockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]}],"devdoc":{"kind":"dev","methods":{"aggregate((address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockNumber":"The block number where the calls were executed","returnData":"An array of bytes containing the responses"}},"aggregate3((address,bool,bytes)[])":{"params":{"calls":"An array of Call3 structs"},"returns":{"returnData":"An array of Result structs"}},"aggregate3Value((address,bool,uint256,bytes)[])":{"params":{"calls":"An array of Call3Value structs"},"returns":{"returnData":"An array of Result structs"}},"blockAndAggregate((address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockHash":"The hash of the block where the calls were executed","blockNumber":"The block number where the calls were executed","returnData":"An array of Result structs"}},"getBlockHash(uint256)":{"params":{"blockNumber":"The block number"}},"tryAggregate(bool,(address,bytes)[])":{"params":{"calls":"An array of Call structs","requireSuccess":"If true, require all calls to succeed"},"returns":{"returnData":"An array of Result structs"}},"tryBlockAndAggregate(bool,(address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockHash":"The hash of the block where the calls were executed","blockNumber":"The block number where the calls were executed","returnData":"An array of Result structs"}}},"version":1},"userdoc":{"kind":"user","methods":{"aggregate((address,bytes)[])":{"notice":"Backwards-compatible call aggregation with Multicall"},"aggregate3((address,bool,bytes)[])":{"notice":"Aggregate calls, ensuring each returns success if required"},"aggregate3Value((address,bool,uint256,bytes)[])":{"notice":"Aggregate calls with a msg valueReverts if msg.value is less than the sum of the call values"},"blockAndAggregate((address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate"},"getBasefee()":{"notice":"Gets the base fee of the given blockCan revert if the BASEFEE opcode is not implemented by the given chain"},"getBlockHash(uint256)":{"notice":"Returns the block hash for the given block number"},"getBlockNumber()":{"notice":"Returns the block number"},"getChainId()":{"notice":"Returns the chain id"},"getCurrentBlockCoinbase()":{"notice":"Returns the block coinbase"},"getCurrentBlockDifficulty()":{"notice":"Returns the block difficulty"},"getCurrentBlockGasLimit()":{"notice":"Returns the block gas limit"},"getCurrentBlockTimestamp()":{"notice":"Returns the block timestamp"},"getEthBalance(address)":{"notice":"Returns the (ETH) balance of a given address"},"getLastBlockHash()":{"notice":"Returns the block hash of the last block"},"tryAggregate(bool,(address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls without requiring success"},"tryBlockAndAggregate(bool,(address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/math/=lib/prb-math/","@prb/test/=lib/prb-math/node_modules/@prb/test/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","prb-math/=lib/prb-math/src/","protocol/=lib/protocol/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/mock/Multicall3.sol":"Multicall3"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/mock/Multicall3.sol":{"keccak256":"0xd7a072f89d3228f1723168bed8d843536225b7e5262b59b7cecd288ec4016826","urls":["bzz-raw://e7eebfb606565b6778b4935ea365583e7fdd9f0dde081845ab2e955f0aaf3f32","dweb:/ipfs/QmWrGXggMLWYHWeEugB34KX8wCcVQGohABEx22m7N9DLqQ"],"license":"MIT"}},"version":1},"id":6}